/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Blog as PrismaBlog } from "@prisma/client";

export class BlogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BlogCountArgs, "select">): Promise<number> {
    return this.prisma.blog.count(args);
  }

  async blogs<T extends Prisma.BlogFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.BlogFindManyArgs>
  ): Promise<PrismaBlog[]> {
    return this.prisma.blog.findMany<Prisma.BlogFindManyArgs>(args);
  }
  async blog<T extends Prisma.BlogFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.BlogFindUniqueArgs>
  ): Promise<PrismaBlog | null> {
    return this.prisma.blog.findUnique(args);
  }
  async createBlog<T extends Prisma.BlogCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BlogCreateArgs>
  ): Promise<PrismaBlog> {
    return this.prisma.blog.create<T>(args);
  }
  async updateBlog<T extends Prisma.BlogUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BlogUpdateArgs>
  ): Promise<PrismaBlog> {
    return this.prisma.blog.update<T>(args);
  }
  async deleteBlog<T extends Prisma.BlogDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.BlogDeleteArgs>
  ): Promise<PrismaBlog> {
    return this.prisma.blog.delete(args);
  }
}
